[{"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/index.js":"1","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/App.js":"2","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/auth/SignUp.js":"3","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/auth/SignIn.js":"4","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/NavBar.js":"5","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/user/User.js":"6","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/post/PostPreview.js":"7","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/vote/Vote.js":"8","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/post/PostDetail.js":"9","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/comment/Avatar.js":"10","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/comment/CommentWrapper.js":"11","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/comment/Comment.js":"12","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/Home.js":"13","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/FirstAndLastDaysOfMonth.js":"14","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/post/PostCreate.js":"15","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/TopicsDropdown.js":"16","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/api/Axios.js":"17","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/Toast.js":"18","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/checkUserLoggedIn.js":"19","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/returnValueOrEmpty.js":"20","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/DeleteModal.js":"21","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/useDebounce.js":"22","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/Search.js":"23","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/user/UserPreview.js":"24","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/RandomAvatar.js":"25","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/reducers/index.js":"26","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/user/Guest.js":"27","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/reducers/postsReducer.js":"28","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/reducers/searchReducer.js":"29","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/reducers/commentsReducer.js":"30","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/reducers/userReducer.js":"31","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/Avatar.js":"32","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/actions/Posts.js":"33","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/actions/User.js":"34","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/actions/Search.js":"35","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/actions/types.js":"36","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/BadgeTopicColor.js":"37","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/actions/Comments.js":"38"},{"size":635,"mtime":1632406506372,"results":"39","hashOfConfig":"40"},{"size":2397,"mtime":1632406506367,"results":"41","hashOfConfig":"40"},{"size":6735,"mtime":1632406506374,"results":"42","hashOfConfig":"40"},{"size":4296,"mtime":1632406506374,"results":"43","hashOfConfig":"40"},{"size":3805,"mtime":1632406506375,"results":"44","hashOfConfig":"40"},{"size":7748,"mtime":1632413082133,"results":"45","hashOfConfig":"40"},{"size":3172,"mtime":1632406506375,"results":"46","hashOfConfig":"40"},{"size":4296,"mtime":1632406506376,"results":"47","hashOfConfig":"40"},{"size":11044,"mtime":1632410606831,"results":"48","hashOfConfig":"40"},{"size":286,"mtime":1611056789280,"results":"49","hashOfConfig":"40"},{"size":4189,"mtime":1632406506374,"results":"50","hashOfConfig":"40"},{"size":8251,"mtime":1632413071965,"results":"51","hashOfConfig":"40"},{"size":11053,"mtime":1632406506373,"results":"52","hashOfConfig":"40"},{"size":497,"mtime":1611068748421,"results":"53","hashOfConfig":"40"},{"size":4533,"mtime":1632406506374,"results":"54","hashOfConfig":"40"},{"size":2363,"mtime":1632406506375,"results":"55","hashOfConfig":"40"},{"size":449,"mtime":1632406506373,"results":"56","hashOfConfig":"40"},{"size":1307,"mtime":1632406506375,"results":"57","hashOfConfig":"40"},{"size":139,"mtime":1632406506376,"results":"58","hashOfConfig":"40"},{"size":127,"mtime":1632406506376,"results":"59","hashOfConfig":"40"},{"size":1012,"mtime":1632406506375,"results":"60","hashOfConfig":"40"},{"size":367,"mtime":1632406506376,"results":"61","hashOfConfig":"40"},{"size":5183,"mtime":1632406506373,"results":"62","hashOfConfig":"40"},{"size":1495,"mtime":1632406506376,"results":"63","hashOfConfig":"40"},{"size":1894,"mtime":1611994433362,"results":"64","hashOfConfig":"40"},{"size":355,"mtime":1632406506377,"results":"65","hashOfConfig":"40"},{"size":5873,"mtime":1632413077205,"results":"66","hashOfConfig":"40"},{"size":1518,"mtime":1632406506377,"results":"67","hashOfConfig":"40"},{"size":663,"mtime":1632406506377,"results":"68","hashOfConfig":"40"},{"size":1172,"mtime":1632406506376,"results":"69","hashOfConfig":"40"},{"size":1551,"mtime":1632406506377,"results":"70","hashOfConfig":"40"},{"size":1079,"mtime":1632406506375,"results":"71","hashOfConfig":"40"},{"size":1960,"mtime":1632406506373,"results":"72","hashOfConfig":"40"},{"size":1519,"mtime":1632406506373,"results":"73","hashOfConfig":"40"},{"size":498,"mtime":1632406506373,"results":"74","hashOfConfig":"40"},{"size":1582,"mtime":1632406506373,"results":"75","hashOfConfig":"40"},{"size":122,"mtime":1632406506375,"results":"76","hashOfConfig":"40"},{"size":1363,"mtime":1632406506373,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"c18rc8",{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"80"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/index.js",[],["173","174"],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/App.js",["175","176"],"import NavBar from './main/component/entities/shared/NavBar'\nimport User from './main/component/entities/user/User';\nimport Guest from './main/component/entities/user/Guest';\nimport Home from './main/component/Home';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport SignUp from './main/component/auth/SignUp';\nimport SignInSide from './main/component/auth/SignIn';\nimport PostCreate from './main/component/entities/post/PostCreate'\nimport { ToastContainer } from 'react-toastify';\nimport { useState, useEffect, createContext, useContext } from 'react';\nimport Axios from \"./main/api/Axios\";\nimport Search from './main/component/Search';\n\n\nexport const AuthContext = createContext();\n\n\nfunction App() {\n\n  const [user, setUser] = useState(null);\n  const [verifying, setVerifying] = useState(true);\n  // const history = useHistory();\n\n  // (user, 'user');\n\n\n  const fetchUserInfo = async () => {\n    const accessToken = localStorage.getItem('crackToken');\n    if (!accessToken) {\n      return setVerifying(false);\n    }\n    try {\n      const res = await Axios.get('/auth/verify');\n      if (res.data.status) {\n        setUser(res.data.data);\n        setVerifying(false);\n      } else {\n        setVerifying(false);\n      }\n    } catch (err) {\n      setVerifying(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchUserInfo();\n  }, []);\n\n  const login = (user, token) => {\n    localStorage.setItem('crackToken', token);\n    setUser(user);\n  }\n\n  const logout = async () => {\n    const result = await Axios.get('/auth/logout');\n    localStorage.removeItem('crackToken');\n    setUser(null);\n  }\n\n  return (\n\n    <AuthContext.Provider value={{ user, login, logout }}>\n      <div className=\"App\">\n        <ToastContainer />\n        <BrowserRouter>\n          <NavBar />\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/current\" exact component={User} />\n          <Route path=\"/register\" exact component={SignUp} />\n          <Route path=\"/login\" exact component={SignInSide} />\n          <Route path=\"/posts/create\" exact component={PostCreate} />\n          <Route path=\"/user/:id\">\n            <Guest />\n          </Route>\n          <Route path=\"/search/:query\">\n            <Search />\n          </Route>\n        </BrowserRouter>\n      </div>\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport default App;\n","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/auth/SignUp.js",["177"],"import React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Axios from '../../api/Axios';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport { ToastError, ToastSuccess } from '../entities/shared/Toast';\nimport { useAuth } from '../../../App'\nimport { useHistory } from 'react-router-dom';\nimport TopicsDropdown from '../entities/shared/TopicsDropdown';\nimport { Label } from 'reactstrap';\nimport { avatars } from '../entities/shared/Avatar'\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" to=\"/\">\n        CrackOverFlow\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const { login, user } = useAuth();\n  const classes = useStyles();\n  const history = useHistory();\n  const [topics, setTopics] = useState([]);\n  const [chosenAvatar, setChosenAvatar] = useState(null)\n\n  useEffect(() => {\n    if (user && user.id) {\n        history.goBack();\n    }\n}, [user])\n\n\n  const saveEntity = async (formData) => {\n    try {\n      const res = await Axios.post('/auth/register', formData);\n      if (res && res.data.success) {\n        ToastSuccess(res.data.message);\n        login(res.data.user, res.data.token.token);\n        return history.push('/')\n      } else {\n        ToastError(res.data.message);\n      }\n    } catch (error) {\n      console.log(error)\n      // ToastError('Đã có lỗi xảy ra, vui lòng thử lại');\n    }\n  }\n\n\n  const register = (event, errors, value) => {\n    if (!chosenAvatar) {\n      ToastError(\"Vui lòng chọn ảnh đại diện\");\n      return\n    }\n    if (!errors.length) {\n      value.topics = topics;\n      value.avatar = chosenAvatar;\n      saveEntity(value);\n    }\n  }\n\n  const onTopicsChange = (e) => {\n    if (e) {\n      const output = e.map(element => element.value);\n      setTopics(output);\n    } else {\n      setTopics([]);\n    }\n  }\n\n  const returnAvatars = () => {\n    const JSXData = avatars.map(e => (\n      <Avatar\n        key={e.value}\n        src={e.value}\n        onClick={() => setChosenAvatar(e.index)}\n        className={chosenAvatar === e.index ? 'chosen-avatar' : 'border' }\n      />\n    ))\n      return JSXData\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Đăng ký\n        </Typography>\n        <AvForm onSubmit={register}>\n          <Grid container spacing={2}>\n            <Grid item xs={6}>\n              <AvField\n                name=\"fname\"\n                id=\"fname\"\n                type=\"text\"\n                label=\"Tên\"\n                autoFocus\n                validate={{\n                  required: { value: true, errorMessage: 'Vui lòng nhập tên' },\n                  maxLength: { value: 10, errorMessage: 'Tên không quá 10 ký tự' }\n                }}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <AvField\n                name=\"lname\"\n                id=\"lname\"\n                label=\"Họ\"\n                type=\"text\"\n                validate={{\n                  required: { value: true, errorMessage: 'Vui lòng nhập họ' },\n                  maxLength: { value: 10, errorMessage: 'Họ không quá 10 ký tự' },\n                }}\n              />\n\n            </Grid>\n            <Grid item xs={12}>\n              <TopicsDropdown \n              onTopicsChange={onTopicsChange}\n              isMultiple={true}\n              // defaultValue={topic}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <AvField\n                name=\"email\"\n                id=\"email\"\n                label=\"Email\"\n                type=\"email\"\n                validate={{\n                  required: { value: true, errorMessage: 'Vui lòng nhập email' },\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <AvField\n                name=\"phone\"\n                id=\"phone\"\n                label=\"Số điện thoại\"\n                type=\"number\"\n                validate={{\n                  required: { value: true, errorMessage: 'Vui lòng nhập số điện thoại' },\n                  pattern: {\n                    value: /^0[1-9][0-9]{8}$/,\n                    errorMessage: 'Số điện thoại không đúng định dạng'\n                  }\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <AvField\n                name=\"password\"\n                id=\"password\"\n                label=\"Mật khẩu\"\n                type=\"number\"\n                validate={{\n                  required: { value: true, errorMessage: 'Vui lòng nhập mật khẩu' },\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Label>\n                <span>Chọn ảnh đại diện</span>\n              </Label>\n              <div className=\"d-flex justify-content-center\">\n                {returnAvatars()}\n              </div>\n\n\n            </Grid>\n            <Button\n              type=\"submit\"\n              // onClick={register}\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Đăng ký\n          </Button>\n            <Grid container justify=\"flex-end\">\n              <Grid item>\n                <Link to=\"/login\" variant=\"body2\" >\n                  Đăng nhập bằng tài khoản\n              </Link>\n              </Grid>\n            </Grid>\n          </Grid>\n        </AvForm>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/auth/SignIn.js",["178"],"import React, {useEffect} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Link, useHistory } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Axios from '../../api/Axios';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport { ToastSuccess, ToastError } from '../entities/shared/Toast';\nimport {useAuth} from '../../../App'\n\n\nfunction Copyright() {\n\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" to=\"/\">\n        CrackOverFlow\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignInSide() {\n  const classes = useStyles();\n  const {login, user} = useAuth();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (user && user.id) {\n      history.goBack();\n    }\n}, [user])\n\n\n  const signIn = async (event, errors, value) => {\n    event.preventDefault();\n    if (!errors.length) {\n      try {\n        // setLoading(true);\n        const res = await Axios.post('/auth/login', value);\n        // return;\n        if (res && res.data.success) {\n          ToastSuccess(res.data.message);\n          login(res.data.user, res.data.token.token);\n          return history.push('/')\n        } else {\n          ToastError(res.data.message);\n        }      \n      } catch (error) {\n        console.log(error)\n        // ToastError('Đã có lỗi xảy ra, vui lòng thử lại');\n      }\n    }\n  }\n\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Đăng nhập\n          </Typography>\n          <AvForm onSubmit={signIn}>\n            <Grid item xs={12}>\n              <AvField\n                name=\"email\"\n                id=\"email\"\n                label=\"Email\"\n                type=\"email\"\n                validate={{\n                  required: { value: true, errorMessage: 'Vui lòng nhập email' },\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <AvField\n                name=\"password\"\n                id=\"passwprd\"\n                label=\"Mật khẩu\"\n                type=\"password\"\n                validate={{\n                  required: { value: true, errorMessage: 'Vui lòng nhập mật khẩu' },\n                }}\n              />\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Đăng nhập\n            </Button>\n          </AvForm>\n\n\n            <Grid item>\n              <Link to=\"/register\" variant=\"body2\">\n                {\"Chưa có tài khoản? Đăng ký ngay\"}\n              </Link>\n            </Grid>\n          <Box mt={5}>\n            <Copyright />\n          </Box>\n\n        </div>\n      </Grid>\n    </Grid>\n  );\n}","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/NavBar.js",[],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/user/User.js",["179","180","181","182","183","184"],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/post/PostPreview.js",["185","186"],"import React, { useState, useEffect } from 'react';\nimport Vote from '../vote/Vote'\nimport { Col, Row, Badge } from 'reactstrap';\nimport PostDetail from './PostDetail';\nimport { returnValueOrEmpty } from '../shared/returnValueOrEmpty';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { fetchPost, triggerSearchOff as triggerSearchPostOff } from '../../../actions/Posts';\nimport { triggerSearchOff as triggerSearchUserOff } from '../../../actions/Posts';\n\nimport { mapTopicColor } from '../shared/BadgeTopicColor';\n\nconst PostPreview = (props) => {\n    const { post, hideVote, entity, shouldSearchUserEntities, shouldSearchPostEntities } = props\n\n    const getPostById = () => {\n        props.fetchPost(post.id);\n\n    }\n    \n    const [postDetailModal, setPostDetailModal] = useState(false);\n    const toggleDetailModal = () => setPostDetailModal(!postDetailModal);\n    const detailModalVisible = () => {\n        getPostById();\n        setPostDetailModal(!postDetailModal);\n    };\n\n    useEffect(() => {\n        if (shouldSearchUserEntities) {\n            setPostDetailModal(false);\n            props.triggerSearchUserOff();\n        }\n    }, [shouldSearchUserEntities])\n\n    useEffect(() =>{\n        if (shouldSearchPostEntities) {\n            setPostDetailModal(false);\n            getPostById();\n            props.triggerSearchPostOff();\n        }\n    }, [shouldSearchPostEntities])\n\n    // (post, 'post')\n\n    return (\n        <Col xs=\"12\" className=\"p-3\">\n            <Row className=\"justify-content-between\">\n                <Col xs=\"2\" >\n                    <Vote\n                        hideVote={hideVote}\n                        totalVote={post?.post_votes}\n                        postId={post?.id}\n                    />\n                </Col>\n                <Col xs=\"10\" onClick={() => detailModalVisible()}>\n                    <p className=\"font-weight-bold\">\n                        {returnValueOrEmpty(post?.title)}\n                    </p>\n                    <p className=\"ellipsisText\">\n                        {returnValueOrEmpty(post?.content)}\n                    </p>\n                </Col>\n                <Col xs=\"10\" className=\"ml-auto d-flex justify-content-between\">\n                    <Badge color={mapTopicColor[post?.topic?.color]}>{post?.topic?.name}</Badge>\n                    <small className=\"font-italic \">\n                        {moment(returnValueOrEmpty(post?.created_at)).format('DD/M/YYYY, HH:mm')}\n                    </small>\n                </Col>\n            </Row>\n            <PostDetail\n                post={entity}\n                modal={postDetailModal}\n                toggle={() => toggleDetailModal()}\n                reFetchData={() => getPostById()}\n            />\n        </Col>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        entity: state.post.entity,\n        shouldSearchUserEntities: state.user.shouldSearchEntities,\n        shouldSearchPostEntities: state.post.shouldSearchEntities,\n    }\n}\nconst mapDispatchToProps = {\n    fetchPost,\n    triggerSearchPostOff,\n    triggerSearchUserOff\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostPreview);","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/vote/Vote.js",["187","188"],"import { Col, Row } from 'reactstrap';\n// import { FontAwesomeIcon } from '@fontawesome/react-fontawesome'\n// import { FontAwesomeIcon } from '@fortawesome/free-solid-svg-icons'\nimport { faCaretDown, faCaretUp, faPray } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useAuth } from '../../../../App';\n// import { useHistory } from 'react-router-dom';\n// import { ToastError } from '../shared/Toast'\nimport { useEffect, useState } from 'react';\nimport { Button } from 'reactstrap'\nimport Axios from '../../../api/Axios';\nimport { ToastError } from '../shared/Toast';\nconst Vote = ({ totalVote, postId, hideVote }) => {\n    const [stateTotalVote, setStateTotalVote] = useState(0);\n    const [userAction, setUserAction] = useState(null);\n    const [haveUserVotedThisTurn, setHaveUserVotedThisTurn] = useState(false);\n\n\n\n    const { user } = useAuth();\n    // (totalVote);\n\n    // (user);\n\n    const returnTotalVotes = (post_votes) => {\n        if (post_votes && post_votes.length) {\n            const total = post_votes.map(e => e.type).reduce((a, b) => a + b, 0)\n            return total\n        } else {\n            return 0;\n        }\n    }\n\n    // (postId, 'postId');\n    // (user, 'user');\n\n    const checkIfUserVotedThisPost = () => {\n        const voteInstance = totalVote?.find(e => e.user_id === user?.id);\n        if (!voteInstance) {\n            return false;\n        }\n        return voteInstance.type === 1 ? \"UPVOTE\" : \"DOWNVOTE\"\n\n    }\n\n    const callVoteAPI = async (voteType) => {\n        const type = voteType === \"UPVOTE\" ? 1 : -1;\n        const data = {\n            post_id: postId,\n            user_id: user.id,\n            type: type,\n        }\n        Axios.post('vote/post', data);\n    }\n\n    const handleVoting = (voteType) => {\n        if (!user || !user.id) {\n            ToastError('Cần đăng nhập trước khi vote');\n            return;\n        }\n        setUserAction(voteType)\n        callVoteAPI(voteType);\n\n        setHaveUserVotedThisTurn(true);\n\n\n        if (!checkIfUserVotedThisPost()) {\n            if (haveUserVotedThisTurn) {\n                setStateTotalVote(voteType === \"UPVOTE\" ? stateTotalVote + 2 : stateTotalVote - 2);\n            } else {\n                setStateTotalVote(voteType === \"UPVOTE\" ? stateTotalVote + 1 : stateTotalVote - 1);\n            }\n        } else if (checkIfUserVotedThisPost() === \"UPVOTE\") {\n            setStateTotalVote(voteType === \"UPVOTE\" ? stateTotalVote + 2 : stateTotalVote - 2);\n        } else if (checkIfUserVotedThisPost() === \"DOWNVOTE\") {\n            setStateTotalVote(voteType === \"UPVOTE\" ? stateTotalVote + 2 : stateTotalVote - 2);\n        }\n\n    }\n\n    useEffect(() => {\n        const output = returnTotalVotes(totalVote);\n        setStateTotalVote(output)\n    }, [totalVote])\n\n    useEffect(() => {\n        if (user && totalVote && postId) {\n            if (!checkIfUserVotedThisPost()) {\n                return;\n            }\n            setUserAction(checkIfUserVotedThisPost());\n        }\n    }, [user, totalVote, postId])\n\n\n\n\n    return (\n        <Row className=\"text-center\">\n            <Col xs=\"12\"  >\n                <Button\n                    className=\"p-0\"\n                    color=\"transparent\"\n                    disabled={userAction === \"UPVOTE\"}\n                    onClick={() => handleVoting('UPVOTE')}\n                // className={hideVote ? \"d-none\" : \"\" }\n                >\n                    <FontAwesomeIcon\n                        color={userAction === \"UPVOTE\" ? 'orange' : ''}\n                        icon={faCaretUp}\n                        size=\"lg\" />\n                </Button>\n\n            </Col>\n            <Col xs=\"12\">\n                {stateTotalVote}\n            </Col>\n            <Col xs=\"12\" >\n                <Button\n                    className=\"p-0\"\n                    color=\"transparent\"\n                    disabled={userAction === \"DOWNVOTE\"}\n                    onClick={() => handleVoting('DOWNVOTE')}>\n                    <FontAwesomeIcon\n                        color={userAction === \"DOWNVOTE\" ? 'orange' : ''}\n                        icon={faCaretDown}\n                        size=\"lg\" />\n                </Button>\n            </Col>\n        </Row>\n    )\n}\nexport default Vote;","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/post/PostDetail.js",["189","190","191"],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/comment/Avatar.js",[],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/comment/CommentWrapper.js",["192","193"],"import React, { useEffect, useRef, useState } from 'react';\nimport { Row, Col, Button } from 'reactstrap';\nimport { AvGroup, AvInput, AvFeedback, AvForm } from 'availity-reactstrap-validation';\nimport Comment from './Comment';\nimport { useAuth } from \"../../../../App\";\nimport { createComment, fetchPostComments, triggerFetchOff, triggerFetchOn, resetComment } from \"../../../actions/Comments\";\nimport { connect } from 'react-redux';\nimport { ToastError } from '../shared/Toast';\nimport { useHistory } from 'react-router-dom';\n\nconst CommentWrapper = (props) => {\n    const history = useHistory();\n    const { postId, comments, shouldSearchComments, commentUpdateSuccess } = props;\n    const formRef = useRef();\n    const { user } = useAuth();\n    const [formVisibility, setFormVisibility] = useState(true);\n    const [userClickTextarea, setUserClickTexarea] = useState(false)\n\n    useEffect(() => {\n        if (shouldSearchComments) {\n            props.fetchPostComments(postId)\n            props.triggerFetchOff();\n        }\n    }, [shouldSearchComments])\n\n    useEffect(() => {\n        if (postId) {\n            props.fetchPostComments(postId)\n        }\n    }, [postId])\n\n    useEffect(() => {\n        if (commentUpdateSuccess) {\n            formRef.current.reset();\n        }\n    }, [commentUpdateSuccess])\n\n\n\n    const handleSubmitComment = (event, errors, value) => {\n        if (!user) {\n            ToastError(\"Vui lòng đăng nhập trước khi bình luận\");\n            history.push('/login');\n        } else {\n            if (!errors.length) {\n                value.post_id = postId;\n                value.user_id = user.id;\n                value.parent_comment_id = null;\n                props.createComment(value);\n                props.triggerFetchOn();\n            }\n        }\n    }\n\n\n    return (\n        <Row className=\"p-1 m-3\">\n            <Col xs=\"12\" className=\"text-break\">\n                {\n                    comments.length ? (\n                        comments.map(e => (\n                            <Comment\n                                clickDisplayPost={false}\n                                key={e.id}\n                                entity={e}\n                                isShort={false}\n                                setSubmitFormVisibility={(value) => setFormVisibility(value)}\n                                // reFetchData={() => props.fetchPostComments(postId)}\n                            />\n                        ))\n                    ) : (\n                            <p>Trở thành người đầu tiên bình luận bài đăng này</p>\n                        )\n                }\n            </Col>\n\n\n            <Col xs=\"12\" className={formVisibility ? 'mt-3' : 'd-none'}>\n                <AvForm style={{ width: '100%' }} ref={formRef} onSubmit={handleSubmitComment}>\n                    <AvGroup>\n                        <AvInput\n                            className={userClickTextarea && 'comment-textarea'}\n                            onClick={()=> setUserClickTexarea(true)}\n                            type=\"textarea\"\n                            name=\"content\"\n                            placeholder=\"Trả lời bài đăng\"\n                            required\n                        />\n                        <AvFeedback>Nhập bình luận trước khi gửi</AvFeedback>\n                    </AvGroup>\n                    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\n                        <Button type=\"submit\" className=\"replyButton\" color=\"primary\">\n                            <span>Gửi bình luận</span>\n                        </Button>\n                    </div>\n                </AvForm>\n            </Col>\n\n        </Row>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        comments: state.comment.entities,\n        shouldSearchComments: state.comment.shouldSearchEntities,\n        commentUpdateSuccess: state.comment.updateSuccess\n    }\n}\nconst mapDispatchToProps = {\n    createComment,\n    fetchPostComments,\n    triggerFetchOff,\n    triggerFetchOn,\n    resetComment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentWrapper);","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/comment/Comment.js",["194","195"],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/Home.js",["196","197","198","199","200"],"import React, { useEffect, useState } from 'react';\nimport { Col, Row, Container, Label, Button, Input } from 'reactstrap';\nimport PostPreview from '../component/entities/post/PostPreview'\nimport { InputAdornment, TextField, Tab, Tabs, Typography, withStyles } from '@material-ui/core';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport useDebounce from './entities/shared/useDebounce';\nimport Pagination from '@material-ui/lab/Pagination';\nimport TopicsDropdown from '../component/entities/shared/TopicsDropdown'\nimport { useAuth } from '../../App'\nimport { pickBy } from 'lodash';\nimport { fetchPosts, fetchHotPosts, triggerSearchOff } from \"../actions/Posts\";\nimport { connect } from \"react-redux\";\n\nconst Home = (props) => {\n    const { posts, totalPosts, topPosts, shouldSearchPosts } = props;\n    const { user } = useAuth();\n    const [query, setQuery] = useState('');\n    const debouncedQuery = useDebounce(query, 500);\n\n    const [tabStatus, setTabStatus] = useState('ALL');\n    const [interestedTopics, setInterestedTopics] = useState(undefined);\n    const [advancedSearch, setAdvancedSearch] = useState({\n        query: '',\n        topic: null,\n        minDate: \"\",\n        maxDate: \"\",\n        page: 1,\n        itemsPerPage: 10\n    })\n\n    const totalPage = Math.ceil(totalPosts / advancedSearch.itemsPerPage);\n\n    useEffect(() => {\n        if (user && user.topics?.length) {\n            const output = user.topics.map(e => e.id);\n            setInterestedTopics(JSON.stringify(output));\n        }\n    }, [user?.topics])\n\n    const getPosts = () => {\n        if (!debouncedQuery.length || debouncedQuery.length >= 3) {\n            window.scrollTo(0, 0);\n            advancedSearch.query = debouncedQuery;\n            const params = pickBy(advancedSearch);\n            const field = JSON.stringify(params);\n            if (tabStatus === \"INTERESTED\") {\n                props.fetchPosts(field, interestedTopics)\n            } else if (tabStatus === \"ALL\") {\n                props.fetchPosts(field, null)\n            }\n        }\n    }\n\n\n    const getHotPosts = () => {\n        props.fetchHotPosts();\n    }\n\n    useEffect(() => {\n        getPosts();\n    }, [JSON.stringify(advancedSearch), debouncedQuery, tabStatus]);\n\n    useEffect(() => {\n        if (shouldSearchPosts) {\n            getPosts();\n            getHotPosts();\n            props.triggerSearchOff();\n        }\n    }, [shouldSearchPosts])\n\n\n    useEffect(() => {\n        getHotPosts();\n    }, [])\n\n    const handleTabChange = (event, newValue) => {\n        setTabStatus(newValue);\n        setAdvancedSearch({ ...advancedSearch, page: 1 })\n    };\n\n    const AntTabs = withStyles({\n        root: {\n            borderBottom: '1px solid #e8e8e8'\n        },\n        indicator: {\n            backgroundColor: '#585F7F'\n        }\n    })(Tabs);\n    const AntTab = withStyles(theme => ({\n        root: {\n            textTransform: 'none',\n            minWidth: 72,\n            fontWeight: theme.typography.fontWeightRegular,\n            marginRight: theme.spacing(4),\n            fontFamily: [\n                '-apple-system',\n                'BlinkMacSystemFont',\n                '\"Segoe UI\"',\n                'Roboto',\n                '\"Helvetica Neue\"',\n                'Arial',\n                'sans-serif',\n                '\"Apple Color Emoji\"',\n                '\"Segoe UI Emoji\"',\n                '\"Segoe UI Symbol\"'\n            ].join(','),\n            '&:hover': {\n                color: '#007bff',\n                opacity: 1\n            },\n            '&$selected': {\n                color: '#007bff',\n                fontWeight: '500'\n            },\n            '&:focus': {\n                color: '#007bff'\n            }\n        },\n        selected: {}\n    }))((property) => <Tab disableRipple {...property} />);\n\n\n    const onTopicChange = (e) => {\n        if (e) {\n            setAdvancedSearch({ ...advancedSearch, topic: e.value, page: 1 })\n        } else {\n            setAdvancedSearch({ ...advancedSearch, topic: null, page: 1 })\n        }\n    }\n    const handlePaginationChange = (event, value) => {\n        setAdvancedSearch({ ...advancedSearch, page: value })\n    }\n    const handleSearchQuery = (value) => {\n        setQuery(value);\n        setAdvancedSearch({ ...advancedSearch, page: 1 })\n    }\n    const onResetFilterClick = () => {\n        setAdvancedSearch({\n            ...advancedSearch,\n            page: 1,\n            query: '',\n            topic: null,\n            minDate: \"\",\n            maxDate: \"\"\n        })\n        setQuery('')\n    }\n\n\n    return (\n        <Container fluid className=\"mt-3\">\n            <Row>\n                <Col xs=\"12\" className=\"d-flex\">\n                    <Button color=\"light\" size=\"sm\" \n                    onClick={onResetFilterClick}\n                    className=\"ml-auto border border-secondary\"> \n                        <span className=\"font-weight-bold\">Reset</span>\n                    </Button>\n                </Col>\n                <Col xs=\"12\">\n                    <Row className=\"home_filterSection justify-content-center\">\n                        <Col>\n                            <TopicsDropdown\n                                onTopicsChange={onTopicChange}\n                                isMultiple={false}\n                                defaultOption={advancedSearch.topic}\n                            />\n                        </Col>\n                        <Col>\n                            <Label>\n                                <span>Tìm kiếm theo nội dung</span>\n                            </Label>\n\n                            <TextField\n                                className=\"search-field\"\n                                id=\"input-with-icon-textfield\"\n                                variant=\"outlined\"\n                                size=\"small\"\n                                value={query}\n                                placeholder=\"Nhập từ khoá\"\n                                onChange={e => handleSearchQuery(e.target.value)}\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <FontAwesomeIcon icon={faSearch} size=\"lg\" />\n                                        </InputAdornment>\n                                    )\n                                }}\n                            />\n                        </Col>\n                        <Col >\n                            <Label for=\"startDate\">\n                                <span>Thời gian từ ngày</span>\n                            </Label>\n                            <Input\n                                type=\"date\"\n                                name=\"date\"\n                                id=\"startDate\"\n                                className=\"datePicker\"\n                                value={advancedSearch.minDate}\n                                max={advancedSearch.maxDate}\n                                onChange={e => setAdvancedSearch({ ...advancedSearch, minDate: e.target.value, page: 1 })}\n                            />\n                        </Col>\n                        <Col>\n                            <Label for=\"endDate\">\n                                <span>Đến ngày</span>\n                            </Label>\n                            <Input\n                                type=\"date\"\n                                name=\"date\"\n                                id=\"endDate\"\n                                className=\"datePicker\"\n                                value={advancedSearch.maxDate}\n                                min={advancedSearch.minDate}\n                                onChange={e => setAdvancedSearch({ ...advancedSearch, maxDate: e.target.value, page: 1 })}\n                            />\n                        </Col>\n                    </Row>\n                    <Row className={user ? 'justify-content-center' : 'd-none'}>\n                        <AntTabs\n                            value={tabStatus}\n                            onChange={handleTabChange}\n                            aria-label=\"ant example\">\n                            <AntTab value=\"ALL\" label={'Tất cả chủ đề'} />\n                            <AntTab value=\"INTERESTED\" label={'Chủ đề quan tâm'} />\n                        </AntTabs>\n                        <Typography />\n                    </Row>\n                </Col>\n            </Row>\n            <Row className=\"p-3\">\n                <Col lg=\"9\" md=\"12\">\n                    <Row className=\"mt-3 home_postSection\">\n                        {\n                            posts?.length ? posts.map(e => (\n                                <PostPreview\n                                    hideVote={true}\n                                    key={e.id}\n                                    post={e}\n                                // postId={e.id}\n                                />\n                            )) : <Col xs=\"12\" className=\"text-center m-3\"> Không tìm thấy bài đăng nào </Col>\n                        }\n                    </Row>\n\n                    <Row className=\"justify-content-center\">\n                        <Pagination count={totalPage} variant=\"outlined\"\n                            onChange={handlePaginationChange}\n                            shape=\"rounded\" />\n                    </Row>\n                </Col>\n                <Col lg=\"3\" md=\"0\">\n                    {/* Ads and recruitment section */}\n                    <Row>\n                        <Col xs=\"12\" className=\"border p-3\">\n                            <div className=\"text-center\">\n                                <span className=\"lead\">Bài đăng nổi bật trong tuần</span>\n                            </div>\n                            <div className=\"home_hotPosts\">\n                                {\n                                    topPosts.length ? topPosts.map(e => (\n                                        <PostPreview\n                                            hideVote={true}\n                                            key={e.id}\n                                            post={e}\n                                        // postId={e.id}\n                                        /> \n                                    )) : \"\"\n                                }\n                            </div>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.post.entities,\n        totalPosts: state.post.totalItems,\n        topPosts: Object.values(state.post.hotEntities),\n        shouldSearchPosts: state.post.shouldSearchEntities\n    }\n}\n\nconst mapDispatchToProps = {\n    fetchPosts,\n    fetchHotPosts,\n    triggerSearchOff\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/FirstAndLastDaysOfMonth.js",[],["201","202"],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/post/PostCreate.js",["203","204","205","206"],"import { AvForm, AvField } from 'availity-reactstrap-validation';\nimport { useEffect, useState, useRef } from 'react';\nimport { Row, Col, Button, Modal, Container } from 'reactstrap';\nimport TopicsDropdown from '../shared/TopicsDropdown'\nimport { ToastSuccess, ToastError } from '../shared/Toast'\nimport { checkUserLoggedIn } from '../shared/checkUserLoggedIn';\nimport Axios from '../../../api/Axios';\nimport { useAuth } from '../../../../App';\nimport { useHistory } from 'react-router-dom';\nimport { createPost, resetPost, triggerSearchOn } from \"../../../actions/Posts\";\nimport { connect } from \"react-redux\";\n\nconst PostCreate = (props) => {\n    const [topic, setTopic] = useState(null);\n    const { user } = useAuth();\n    const history = useHistory();\n    const formRef = useRef();\n\n\n    useEffect(() => {\n        if (props.modal) {\n            if (!checkUserLoggedIn(user)) {\n                return history.push('login');\n            }\n        }\n    }, [props.modal])\n\n    useEffect(() => {\n        if (props.postUpdateSuccess && props.modal) {\n            props.resetPost();\n            props.triggerSearchOn();\n            props.toggle();\n            clearForm();\n        }\n    }, [props.postUpdateSuccess])\n\n    const onTopicsChange = (e) => {\n        if (e) {\n            console.log(e, 'e');\n            setTopic(e.value);\n        } else {\n            setTopic(undefined);\n        }\n    }\n\n    const clearForm = () => {\n        formRef.current.reset();\n    }\n\n\n    const submitPost = data => {\n        props.createPost(data);\n    }\n\n    const onFormSubmit = (event, errors, value) => {\n        if (!errors.length) {\n            if (!topic) {\n                ToastError('Vui lòng chọn chủ đề cho bài đăng')\n            } else {\n                value.topic_id = topic;\n                value.user_id = user.id;\n                submitPost(value);\n            }\n        }\n    }\n\n\n    return (\n        <Modal isOpen={props.modal} toggle={() => props.toggle()} className=\"postDetailModal\" >\n            <Container className=\"p-5\">\n                <Row className=\"m-3\">\n                    <Col xs=\"12\" className=\"text-center\">\n                        <h3 className=\"lead\">Tạo bài đăng mới</h3>\n                    </Col>\n                    <Col xs=\"12\">\n                        <TopicsDropdown\n                            onTopicsChange={onTopicsChange}\n                            isMultiple={false}\n                            defaultOption={topic}\n                        />\n                    </Col>\n                </Row>\n                <Row className=\"m-3\">\n                    <Col xs=\"12\">\n                        <AvForm onSubmit={onFormSubmit} ref={formRef}>\n                            <AvField name=\"title\" label=\"Tiêu đề\"\n                                validate={{\n                                    required: { value: true, errorMessage: 'Vui lòng nhập tiêu đề bài đăng' },\n                                    minLength: { value: 10, errorMessage: 'Tiêu đề bài đăng chứa ít nhất 10 ký tự' },\n                                    maxLength: { value: 255, errorMessage: 'Tiêu đề bài đăng chứa không quá 255 ký tự' },\n                                }}\n                            />\n                            <AvField name=\"content\" label=\"Nội dung\" type=\"textarea\"\n                                className=\"post_textAreaContent\"\n                                validate={{\n                                    required: { value: true, errorMessage: 'Vui lòng nhập nội dung bài đăng' },\n                                    minLength: { value: 10, errorMessage: 'Nội dung bài đăng chứa ít nhất 10 ký tự' },\n                                }}\n                            />\n\n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\n                                <Button type=\"submit\" className=\"replyButton\" color=\"primary\">\n                                    <span>Tạo bài đăng</span>\n                                </Button>\n                            </div>\n                        </AvForm>\n                    </Col>\n                </Row>\n\n            </Container>\n        </Modal>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        postUpdateSuccess: state.post.updateSuccess\n    }\n}\n\nconst mapDispatchToProps = {\n    createPost, \n    resetPost,\n    triggerSearchOn\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostCreate);","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/TopicsDropdown.js",["207"],"import Select from 'react-select';\nimport { Label } from 'reactstrap';\nimport Axios from '../../../api/Axios'\nimport { useEffect, useState } from 'react';\n\n\nconst TopicsDropdown = (props) => {\n    const [topics, setTopics] = useState([{ value: \"\", label: \"\" }]);\n    const convertRawTopicData = (input) => {\n        const output = input.map((e) => (\n            {\n                value: e.id,\n                label: e.name\n            }\n        ))\n        return output;\n    }\n\n    const getAllTopics = async () => {\n        try {\n            const res = await Axios.get('/topics/getAll');\n            if (res.status === 200) {\n                const output = convertRawTopicData(res.data.data);\n                setTopics(output);\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    useEffect(() => {\n        getAllTopics();\n    }, []);\n\n\n    // const options = [\n    //     { value: 'chocolate', label: 'Chocolate' },\n    //     { value: 'strawberry', label: 'Strawberry' },\n    //     { value: 'vanilla', label: 'Vanilla' }\n    // ]\n    const customStyles = {\n        control: styles => ({\n            ...styles,\n            // width: '300px'\n\n        }),\n        option: styles => ({\n            ...styles,\n\n        }),\n        menu: styles => ({\n            ...styles,\n            // width: '200px'\n        })\n\n    };\n\n    const returnDefaultOption = () => {\n        if (!props.defaultOption) {\n            return undefined;\n        }\n        if (typeof props.defaultOption === \"number\") {\n            return topics.find(e => e.value === props.defaultOption)\n        } else {\n            return props.defaultOption\n        }\n\n        \n    }\n\n    // console.log(props.defaultOption, 'props.defaultOption');\n    return (\n        <>\n            <Label>\n                <span>Chọn chủ đề</span>\n            </Label>\n            <Select\n                key={`reactSelectKey${props.defaultOption}`}\n                onChange={props.onTopicsChange}\n                value={returnDefaultOption()}\n                // value={props.defaultOption}\n                options={topics}\n                isMulti={props.isMultiple}\n                placeholder=\"Danh sách chủ đề\"\n                isClearable\n                isSearchable\n                styles={customStyles} />\n\n        </>\n    )\n}\n\nexport default TopicsDropdown;","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/api/Axios.js",[],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/Toast.js",[],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/checkUserLoggedIn.js",[],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/returnValueOrEmpty.js",[],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/DeleteModal.js",["208"],"import { Button, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\n\n\nconst DeleteModal = (props) => {\n    const  { prompt, handleComfirm } = props;\n    // (post, 'post');\n    return (\n        <Modal className=\"m-3\" isOpen={props.modal} toggle={() => props.toggle()} className=\"deleteModal\">\n            <ModalHeader toggle={() => props.toggle()}>\n                <span>Xác nhận xóa</span>\n            </ModalHeader>\n            <ModalBody className=\"text-left\">\n                <span>{prompt}</span>\n            </ModalBody>\n            <ModalFooter>\n                <Button style={{ backgroundColor: '#ffffff', border: '1px solid #666666', color: '#666666' }}\n                    onClick={() => props.toggle()}>\n                    <span>Hủy</span>\n                </Button>\n                <Button color=\"danger\" onClick={() => handleComfirm()}>\n                    <span>Xóa</span>\n                </Button>\n            </ModalFooter>\n        </Modal>\n    )\n}\n\nexport default DeleteModal;","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/useDebounce.js",["209"],"import { useEffect, useState } from 'react';\n\nexport default function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value]);\n\n  return debouncedValue;\n}\n","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/Search.js",["210","211","212"],"import React, { useEffect, useState, useRef } from 'react';\nimport { Col, Row, Container } from 'reactstrap';\nimport PostPreview from '../component/entities/post/PostPreview'\nimport UserPreview from \"../component/entities/user/UserPreview\";\nimport { Tab, Tabs, Typography, withStyles } from '@material-ui/core';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { useParams } from 'react-router-dom';\nimport { pickBy } from \"lodash\";\nimport { connect } from 'react-redux';\nimport { searchPosts, searchUsers } from '../actions/Search';\n\nconst Search = (props) => {\n    const { query } = useParams();\n\n    const [tabStatus, setTabStatus] = useState('POSTS');\n    const [advancedSearch, setAdvancedSearch] = useState({\n        page: 1,\n        itemsPerPage: 10,\n        query: ''\n    })\n\n    const { users, posts, totalItems } = props;\n    const totalPage = Math.ceil(totalItems / advancedSearch.itemsPerPage);\n\n    const getEntities = async () => {\n        advancedSearch.query = query;\n        const params = pickBy(advancedSearch);\n        if (tabStatus === 'POSTS') {\n            props.searchPosts(params)\n        } else if (tabStatus === 'USERS') {\n            props.searchUsers(params)\n        }\n    }\n\n    useEffect(() => {\n        getEntities();\n    }, [JSON.stringify(advancedSearch), tabStatus, query])\n\n    const handleTabChange = (event, newValue) => {\n        setTabStatus(newValue);\n    };\n\n    const AntTabs = withStyles({\n        root: {\n            borderBottom: '1px solid #e8e8e8'\n        },\n        indicator: {\n            backgroundColor: '#585F7F'\n        }\n    })(Tabs);\n    const AntTab = withStyles(theme => ({\n        root: {\n            textTransform: 'none',\n            minWidth: 72,\n            fontWeight: theme.typography.fontWeightRegular,\n            marginRight: theme.spacing(4),\n            fontFamily: [\n                '-apple-system',\n                'BlinkMacSystemFont',\n                '\"Segoe UI\"',\n                'Roboto',\n                '\"Helvetica Neue\"',\n                'Arial',\n                'sans-serif',\n                '\"Apple Color Emoji\"',\n                '\"Segoe UI Emoji\"',\n                '\"Segoe UI Symbol\"'\n            ].join(','),\n            '&:hover': {\n                color: '#007bff',\n                opacity: 1\n            },\n            '&$selected': {\n                color: '#007bff',\n                fontWeight: '500'\n            },\n            '&:focus': {\n                color: '#007bff'\n            }\n        },\n        selected: {}\n    }))((property) => <Tab disableRipple {...property} />);\n\n\n    const handlePaginationChange = (event, value) => {\n        window.scrollTo(0,0)\n        setAdvancedSearch({ ...advancedSearch, page: value })\n    }\n\n    return (\n        <Container fluid className=\"mt-3\">\n\n            <div className=\"justify-content-center d-flex\">\n                <AntTabs\n                    value={tabStatus}\n                    onChange={handleTabChange}\n                    aria-label=\"ant example\">\n                    <AntTab value=\"POSTS\" label={'Bài đăng'} />\n                    <AntTab value=\"USERS\" label={'Người dùng'} />\n                </AntTabs>\n                <Typography />\n            </div>\n\n            <div className=\"text-center mt-3\">\n                <p className=\"lead\">Kết quả tìm kiếm với từ khoá: <span className=\"font-weight-bold\"> {query} </span>  </p>\n            </div>\n\n            <div className={tabStatus === \"POSTS\" ? \"\" : 'd-none'}>\n                <Row className=\"mt-3 home_postSection\">\n                    {\n                        posts?.length ? posts.map(e => (\n                            <PostPreview\n                                hideVote={true}\n                                key={e.id}\n                                post={e}\n                            // postId={e.id}\n                            />\n                        )) : <Col xs=\"12\" className=\"text-center m-3\"> Không tìm thấy bài đăng nào </Col>\n                    }\n                </Row>\n            </div>\n\n            <div className={tabStatus === \"USERS\" ? \"\" : 'd-none'}>\n                <Row className=\"mt-3 home_postSection\">\n                    {\n                        users?.length ? users.map(e => (\n                            <UserPreview\n                                entity={e}\n                                key={e.id}\n                            />\n                        )) : <Col xs=\"12\" className=\"text-center m-3\"> Không tìm thấy nguời dùng nào </Col>\n                    }\n                </Row>\n            </div>\n\n            <Row className=\"justify-content-center\">\n                <Pagination count={totalPage} variant=\"outlined\"\n                    onChange={handlePaginationChange}\n                    shape=\"rounded\" />\n            </Row>\n\n        </Container>\n    )\n}\nconst mapDispatchToProps = {\n    searchPosts,\n    searchUsers\n}\nconst mapStateToProps = (state) => {\n    return {\n        users: state.search.usersEntities,\n        posts: state.search.postsEntities,\n        totalItems: state.search.totalItems\n    }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/user/UserPreview.js",[],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/RandomAvatar.js",[],["213","214"],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/reducers/index.js",[],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/user/Guest.js",["215","216"],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/reducers/postsReducer.js",["217"],"import { \n    CREATE_POST, RESET_POST, FETCH_POSTS, FETCH_HOT_POSTS, \n    TRIGGER_SEARCH_POSTS_ON, TRIGGER_SEARCH_POSTS_OFF, FETCH_POST, DELETE_POST, EDIT_POST \n} from '../actions/types';\n\n\nconst initialState = {\n    entities: [],\n    entity: null,\n    updateSuccess: false,\n    totalItems: 0,\n    hotEntities: [],\n    shouldSearchEntities: false\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case CREATE_POST:\n            return { ...state, entity: action.payload.data, updateSuccess: true };\n        case DELETE_POST:\n        case EDIT_POST:\n            return { ...state, updateSuccess: true };\n        case FETCH_POST:\n            return { ...state, entity: action.payload};\n        case FETCH_POSTS:\n            return { \n                ...state, \n                entities: action.payload.data, \n                totalItems: action.payload.total\n             };\n        case FETCH_HOT_POSTS:\n            return {\n                ...state,\n                hotEntities: action.payload.data\n            }\n        case TRIGGER_SEARCH_POSTS_ON:\n            return {\n                ...state,\n                shouldSearchEntities: true\n            }\n        case TRIGGER_SEARCH_POSTS_OFF:\n            return {\n                ...state,\n                shouldSearchEntities: false,\n                updateSuccess: false\n            }\n        case RESET_POST: \n            return {\n                ...initialState\n            };\n        default:\n            return state;\n    }\n}","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/reducers/searchReducer.js",["218"],"import { SEARCH_USERS, SEARCH_POSTS } from '../actions/types';\n\nconst initialState = {\n    postsEntities: [],\n    usersEntities: [],\n    totalItems: 0,\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SEARCH_USERS:\n            return { \n                ...state, \n                usersEntities: action.payload.data,\n                totalItems: action.payload.total\n            }\n        case SEARCH_POSTS:\n            return {\n                ...state,\n                postsEntities: action.payload.data,\n                totalItems: action.payload.total\n            }\n        default:\n            return state;\n    }\n}","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/reducers/commentsReducer.js",["219"],"import {\n   CREATE_COMMENT, DELETE_COMMENT, FETCH_COMMENTS, RESET_COMMENT, EDIT_COMMENT,\n   TRIGGER_FETCH_COMMENTS_OFF, TRIGGER_FETCH_COMMENTS_ON\n} from '../actions/types';\n\n\nconst initialState = {\n    entities: [],\n    entity: null,\n    updateSuccess: false, \n    totalItems: 0,\n    shouldSearchEntities: false\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case CREATE_COMMENT:\n            return { ...state, entity: action.payload, updateSuccess: true };\n        case FETCH_COMMENTS:\n            return { ...state, entities: action.payload };\n        case DELETE_COMMENT:\n        case EDIT_COMMENT:\n            return { ...state, updateSuccess: true };\n        case TRIGGER_FETCH_COMMENTS_ON:\n            return {\n                ...state,\n                shouldSearchEntities: true\n            }\n        case TRIGGER_FETCH_COMMENTS_OFF:\n            return {\n                ...state,\n                shouldSearchEntities: false,\n                updateSuccess: false\n            }\n        case RESET_COMMENT:\n            return {\n                ...initialState\n            };\n        default:\n            return state;\n    }\n}","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/reducers/userReducer.js",["220"],"import {\n    FETCH_USER_COMMENTS, FETCH_USER_SUGGESTED_POSTS, TRIGER_FETCH_USER_OFF, TRIGER_FETCH_USER_ON,\n    FETCH_USER_POSTS, RESET_USER, FETCH_GUEST\n} from \"../actions/types\";\nconst initialState = {\n    isSignedIn: null,\n    guest: null,\n    posts: [],\n    totalPosts: 0,\n    suggestedPosts: [],\n    comments: [],\n    totalCredit: 0,\n    shouldSearchEntities: false\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_USER_POSTS:\n            return {\n                ...state,\n                posts: action.payload.posts?.data,\n                totalCredit: action.payload.totalCredit,\n                totalPosts: action.payload.posts?.total,\n            }\n        case FETCH_GUEST:\n            return {\n                ...state,\n                guest: action.payload\n            }\n        case FETCH_USER_COMMENTS:\n            return {\n                ...state,\n                comments: action.payload.data\n            }\n        case FETCH_USER_SUGGESTED_POSTS:\n            return {\n                ...state,\n                suggestedPosts: action.payload.data\n            }\n        case TRIGER_FETCH_USER_ON:\n            return {\n                ...state,\n                shouldSearchEntities: true\n            }\n        case TRIGER_FETCH_USER_OFF:\n            return {\n                ...state,\n                shouldSearchEntities: false\n            }\n        case RESET_USER:\n            return {\n                ...initialState\n            };\n        default:\n            return state;\n    }\n}","/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/Avatar.js",[],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/actions/Posts.js",[],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/actions/User.js",[],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/actions/Search.js",[],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/actions/types.js",[],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/component/entities/shared/BadgeTopicColor.js",[],"/Users/jake21/Documents/Code/projects/CrackOverFlow/frontend/src/main/actions/Comments.js",[],{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":21,"column":10,"nodeType":"227","messageId":"228","endLine":21,"endColumn":19},{"ruleId":"225","severity":1,"message":"229","line":55,"column":11,"nodeType":"227","messageId":"228","endLine":55,"endColumn":17},{"ruleId":"230","severity":1,"message":"231","line":65,"column":4,"nodeType":"232","endLine":65,"endColumn":10,"suggestions":"233"},{"ruleId":"230","severity":1,"message":"231","line":73,"column":4,"nodeType":"232","endLine":73,"endColumn":10,"suggestions":"234"},{"ruleId":"230","severity":1,"message":"231","line":30,"column":8,"nodeType":"232","endLine":30,"endColumn":14,"suggestions":"235"},{"ruleId":"230","severity":1,"message":"236","line":34,"column":8,"nodeType":"232","endLine":34,"endColumn":10,"suggestions":"237"},{"ruleId":"230","severity":1,"message":"238","line":40,"column":8,"nodeType":"232","endLine":40,"endColumn":14,"suggestions":"239"},{"ruleId":"230","severity":1,"message":"240","line":49,"column":8,"nodeType":"232","endLine":49,"endColumn":41,"suggestions":"241"},{"ruleId":"230","severity":1,"message":"242","line":49,"column":9,"nodeType":"243","endLine":49,"endColumn":40},{"ruleId":"230","severity":1,"message":"240","line":57,"column":8,"nodeType":"232","endLine":57,"endColumn":30,"suggestions":"244"},{"ruleId":"230","severity":1,"message":"236","line":33,"column":8,"nodeType":"232","endLine":33,"endColumn":34,"suggestions":"245"},{"ruleId":"230","severity":1,"message":"246","line":41,"column":8,"nodeType":"232","endLine":41,"endColumn":34,"suggestions":"247"},{"ruleId":"225","severity":1,"message":"248","line":4,"column":34,"nodeType":"227","messageId":"228","endLine":4,"endColumn":40},{"ruleId":"230","severity":1,"message":"249","line":93,"column":8,"nodeType":"232","endLine":93,"endColumn":33,"suggestions":"250"},{"ruleId":"230","severity":1,"message":"251","line":46,"column":8,"nodeType":"232","endLine":46,"endColumn":21,"suggestions":"252"},{"ruleId":"230","severity":1,"message":"253","line":106,"column":8,"nodeType":"232","endLine":106,"endColumn":27,"suggestions":"254"},{"ruleId":"255","severity":1,"message":"256","line":117,"column":83,"nodeType":"257","endLine":117,"endColumn":110},{"ruleId":"230","severity":1,"message":"258","line":24,"column":8,"nodeType":"232","endLine":24,"endColumn":30,"suggestions":"259"},{"ruleId":"230","severity":1,"message":"236","line":30,"column":8,"nodeType":"232","endLine":30,"endColumn":16,"suggestions":"260"},{"ruleId":"230","severity":1,"message":"261","line":96,"column":8,"nodeType":"232","endLine":96,"endColumn":30,"suggestions":"262"},{"ruleId":"255","severity":1,"message":"256","line":152,"column":51,"nodeType":"257","endLine":152,"endColumn":106},{"ruleId":"230","severity":1,"message":"263","line":39,"column":8,"nodeType":"232","endLine":39,"endColumn":22,"suggestions":"264"},{"ruleId":"230","severity":1,"message":"265","line":62,"column":8,"nodeType":"232","endLine":62,"endColumn":67,"suggestions":"266"},{"ruleId":"230","severity":1,"message":"242","line":62,"column":9,"nodeType":"243","endLine":62,"endColumn":39},{"ruleId":"230","severity":1,"message":"267","line":70,"column":8,"nodeType":"232","endLine":70,"endColumn":27,"suggestions":"268"},{"ruleId":"230","severity":1,"message":"269","line":75,"column":8,"nodeType":"232","endLine":75,"endColumn":10,"suggestions":"270"},{"ruleId":"221","replacedBy":"271"},{"ruleId":"223","replacedBy":"272"},{"ruleId":"225","severity":1,"message":"273","line":5,"column":10,"nodeType":"227","messageId":"228","endLine":5,"endColumn":22},{"ruleId":"225","severity":1,"message":"274","line":7,"column":8,"nodeType":"227","messageId":"228","endLine":7,"endColumn":13},{"ruleId":"230","severity":1,"message":"275","line":26,"column":8,"nodeType":"232","endLine":26,"endColumn":21,"suggestions":"276"},{"ruleId":"230","severity":1,"message":"236","line":35,"column":8,"nodeType":"232","endLine":35,"endColumn":33,"suggestions":"277"},{"ruleId":"230","severity":1,"message":"278","line":33,"column":8,"nodeType":"232","endLine":33,"endColumn":10,"suggestions":"279"},{"ruleId":"255","severity":1,"message":"256","line":8,"column":83,"nodeType":"257","endLine":8,"endColumn":106},{"ruleId":"230","severity":1,"message":"280","line":14,"column":6,"nodeType":"232","endLine":14,"endColumn":13,"suggestions":"281"},{"ruleId":"225","severity":1,"message":"282","line":1,"column":38,"nodeType":"227","messageId":"228","endLine":1,"endColumn":44},{"ruleId":"230","severity":1,"message":"283","line":37,"column":8,"nodeType":"232","endLine":37,"endColumn":58,"suggestions":"284"},{"ruleId":"230","severity":1,"message":"242","line":37,"column":9,"nodeType":"243","endLine":37,"endColumn":39},{"ruleId":"221","replacedBy":"285"},{"ruleId":"223","replacedBy":"286"},{"ruleId":"230","severity":1,"message":"287","line":31,"column":8,"nodeType":"232","endLine":31,"endColumn":12,"suggestions":"288"},{"ruleId":"230","severity":1,"message":"289","line":35,"column":29,"nodeType":"290","endLine":35,"endColumn":34},{"ruleId":"291","severity":1,"message":"292","line":16,"column":1,"nodeType":"293","endLine":54,"endColumn":2},{"ruleId":"291","severity":1,"message":"292","line":9,"column":1,"nodeType":"293","endLine":26,"endColumn":2},{"ruleId":"291","severity":1,"message":"292","line":15,"column":1,"nodeType":"293","endLine":42,"endColumn":2},{"ruleId":"291","severity":1,"message":"292","line":16,"column":1,"nodeType":"293","endLine":57,"endColumn":2},"no-native-reassign",["294"],"no-negated-in-lhs",["295"],"no-unused-vars","'verifying' is assigned a value but never used.","Identifier","unusedVar","'result' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["296"],["297"],["298"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["299"],"React Hook useEffect has missing dependencies: 'interestedTopics' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["300"],"React Hook useEffect has missing dependencies: 'paginationState.currentPage', 'props', and 'user?.id'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["301"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression",["302"],["303"],"React Hook useEffect has missing dependencies: 'getPostById' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["304"],"'faPray' is defined but never used.","React Hook useEffect has a missing dependency: 'checkIfUserVotedThisPost'. Either include it or remove the dependency array.",["305"],"React Hook useEffect has a missing dependency: 'defaultTopic'. Either include it or remove the dependency array. You can also do a functional update 'setDefaultTopic(d => ...)' if you only need 'defaultTopic' in the 'setDefaultTopic' call.",["306"],"React Hook useEffect has missing dependencies: 'handleUserIntent' and 'props.modal'. Either include them or remove the dependency array.",["307"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'postId' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["308"],["309"],"React Hook useEffect has missing dependencies: 'handleUserIntent' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["310"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["311"],"React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.",["312"],"React Hook useEffect has missing dependencies: 'getHotPosts', 'getPosts', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["313"],"React Hook useEffect has a missing dependency: 'getHotPosts'. Either include it or remove the dependency array.",["314"],["294"],["295"],"'ToastSuccess' is defined but never used.","'Axios' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'user'. Either include them or remove the dependency array.",["315"],["316"],"React Hook useEffect has a missing dependency: 'getAllTopics'. Either include it or remove the dependency array.",["317"],"React Hook useEffect has a missing dependency: 'delay'. Either include it or remove the dependency array.",["318"],"'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'getEntities'. Either include it or remove the dependency array.",["319"],["294"],["295"],"React Hook useEffect has missing dependencies: 'getEntities', 'paginationState.currentPage', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["320"],"Assignments to the 'initialRender' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"321","fix":"322"},{"desc":"321","fix":"323"},{"desc":"321","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},"Update the dependencies array to be: [history, user]",{"range":"369","text":"370"},{"range":"371","text":"370"},{"range":"372","text":"370"},"Update the dependencies array to be: [props]",{"range":"373","text":"374"},"Update the dependencies array to be: [interestedTopics, props, user]",{"range":"375","text":"376"},"Update the dependencies array to be: [paginationState.currentPage, props, user?.id]",{"range":"377","text":"378"},"Update the dependencies array to be: [paginationState.currentPage, props, shouldSearchEntities, user?.id]",{"range":"379","text":"380"},"Update the dependencies array to be: [props, shouldSearchUserEntities]",{"range":"381","text":"382"},"Update the dependencies array to be: [getPostById, props, shouldSearchPostEntities]",{"range":"383","text":"384"},"Update the dependencies array to be: [user, totalVote, postId, checkIfUserVotedThisPost]",{"range":"385","text":"386"},"Update the dependencies array to be: [defaultTopic, post.topic]",{"range":"387","text":"388"},"Update the dependencies array to be: [handleUserIntent, postUpdateSuccess, props.modal]",{"range":"389","text":"390"},"Update the dependencies array to be: [postId, props, shouldSearchComments]",{"range":"391","text":"392"},"Update the dependencies array to be: [postId, props]",{"range":"393","text":"394"},"Update the dependencies array to be: [commentUpdateSuccess, handleUserIntent, props]",{"range":"395","text":"396"},"Update the dependencies array to be: [user, user.topics]",{"range":"397","text":"398"},"Update the dependencies array to be: [debouncedQuery, getPosts, tabStatus]",{"range":"399","text":"400"},"Update the dependencies array to be: [getHotPosts, getPosts, props, shouldSearchPosts]",{"range":"401","text":"402"},"Update the dependencies array to be: [getHotPosts]",{"range":"403","text":"404"},"Update the dependencies array to be: [history, props.modal, user]",{"range":"405","text":"406"},"Update the dependencies array to be: [props, props.postUpdateSuccess]",{"range":"407","text":"408"},"Update the dependencies array to be: [getAllTopics]",{"range":"409","text":"410"},"Update the dependencies array to be: [delay, value]",{"range":"411","text":"412"},"Update the dependencies array to be: [tabStatus, query, getEntities]",{"range":"413","text":"414"},"Update the dependencies array to be: [getEntities, id, paginationState.currentPage, props]",{"range":"415","text":"416"},[1909,1915],"[history, user]",[1926,1932],[1192,1198],[1257,1259],"[props]",[1440,1446],"[interestedTopics, props, user]",[1710,1743],"[paginationState.currentPage, props, user?.id]",[1984,2006],"[paginationState.currentPage, props, shouldSearchEntities, user?.id]",[1168,1194],"[props, shouldSearchUserEntities]",[1383,1409],"[getPostById, props, shouldSearchPostEntities]",[3052,3077],"[user, totalVote, postId, checkIfUserVotedThisPost]",[2160,2173],"[defaultTopic, post.topic]",[3807,3826],"[handleUserIntent, postUpdateSuccess, props.modal]",[1034,1056],"[postId, props, shouldSearchComments]",[1164,1172],"[postId, props]",[3504,3526],"[commentUpdateSuccess, handleUserIntent, props]",[1602,1616],"[user, user.topics]",[2250,2309],"[debouncedQuery, getPosts, tabStatus]",[2474,2493],"[getHotPosts, getPosts, props, shouldSearchPosts]",[2549,2551],"[getHotPosts]",[959,972],"[history, props.modal, user]",[1189,1214],"[props, props.postUpdateSuccess]",[871,873],"[getAllTopics]",[329,336],"[delay, value]",[1269,1319],"[tabStatus, query, getEntities]",[1075,1079],"[getEntities, id, paginationState.currentPage, props]"]